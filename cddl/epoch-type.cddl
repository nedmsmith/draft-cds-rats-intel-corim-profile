epoch-operators /= op.eq
epoch-operators /= op.gt
epoch-operators /= op.ge
epoch-operators /= op.lt
epoch-operators /= op.le
epoch-seconds-type = int
$epoch-timestamp-type /= ~tdate
$epoch-timestamp-type /= ~time
epoch-expression = [ 
    epoch-operators
    epoch-seconds-type
    ? $tagged-epoch-id
]
epoch-expression2 = [ ; replaces epoch-expression when examples are ported
    epoch-operators
    epoch-marker
]
tagged-epoch-expression = #6.60032( epoch-expression / epoch-expression2)

$tagged-epoch-id /= tdate ; string - converted to ~time for comparisons
$tagged-epoch-id /= time ; int or float
$tagged-epoch-id /= #6.26990( epoch-grace-tdate)
$tagged-epoch-id /= #6.26991( epoch-grace-time)

epoch-marker = [
    epoch-id: $tagged-epoch-id
    ? bell-veracity-proof
]

; veracity of the bell
bell-veracity-proof = non-empty<{
  ? remote-attestation-evidence ; could be EAT or Concise Evidence
  ? remote-attestation-result ; hopefully EAT with AR4SI Claims
  ? scitt-receipt ; SCITT receipt
}>

remote-attestation-evidence = (1: bytes)
remote-attestation-result = (2: bytes)
scitt-receipt = (3: bytes)

epoch-grace-tdate = [
    epoch: tdate
    grace-period: epoch-seconds-type
]

epoch-grace-time = [
    epoch: time
    grace-period: epoch-seconds-type

]